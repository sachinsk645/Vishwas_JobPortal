{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CSC\\\\Downloads\\\\VishwasJobPortal - Copy\\\\VishwasJobPortal\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  UPDATE_USER: 'UPDATE_USER',\n  SET_LOADING: 'SET_LOADING',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/auth/profile`);\n          dispatch({\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\n            payload: {\n              user: response.data.user,\n              token\n            }\n          });\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n        }\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Login successful!');\n\n      // Redirect based on role\n      const redirectPath = user.role === 'admin' ? '/admin/dashboard' : user.role === 'recruiter' ? '/recruiter/dashboard' : '/applicant/dashboard';\n      window.location.href = redirectPath;\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n      const {\n        user,\n        token\n      } = response.data;\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Registration successful!');\n\n      // Redirect based on role\n      const redirectPath = user.role === 'admin' ? '/admin/dashboard' : user.role === 'recruiter' ? '/recruiter/dashboard' : '/applicant/dashboard';\n      window.location.href = redirectPath;\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed. Please try again.';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await axios.post(`${API_BASE_URL}/auth/logout`);\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      toast.success('Logged out successfully');\n      window.location.href = '/';\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/auth/profile`, profileData);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to update profile';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put(`${API_BASE_URL}/auth/change-password`, {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to change password';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Context value\n  const value = {\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: !!state.token,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","initialState","user","token","localStorage","getItem","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","UPDATE_USER","SET_LOADING","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","defaults","headers","common","setItem","removeItem","checkAuth","response","get","data","console","login","email","password","post","success","redirectPath","role","window","location","href","_error$response","_error$response$data","errorMessage","register","userData","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","clearError","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/CSC/Downloads/VishwasJobPortal - Copy/VishwasJobPortal/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\n// API base URL\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  SET_LOADING: 'SET_LOADING',\r\n  CLEAR_ERROR: 'CLEAR_ERROR'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    \r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload }\r\n      };\r\n    \r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    \r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n      localStorage.setItem('token', state.token);\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (token) {\r\n        try {\r\n          const response = await axios.get(`${API_BASE_URL}/auth/profile`);\r\n          dispatch({\r\n            type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n            payload: {\r\n              user: response.data.user,\r\n              token\r\n            }\r\n          });\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        email,\r\n        password\r\n      });\r\n\r\n      const { user, token } = response.data;\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token }\r\n      });\r\n\r\n      toast.success('Login successful!');\r\n      \r\n      // Redirect based on role\r\n      const redirectPath = user.role === 'admin' ? '/admin/dashboard' :\r\n                          user.role === 'recruiter' ? '/recruiter/dashboard' :\r\n                          '/applicant/dashboard';\r\n      \r\n      window.location.href = redirectPath;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.error || 'Login failed. Please try again.';\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\r\n        payload: errorMessage\r\n      });\r\n      \r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\r\n      \r\n      const { user, token } = response.data;\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\r\n        payload: { user, token }\r\n      });\r\n\r\n      toast.success('Registration successful!');\r\n      \r\n      // Redirect based on role\r\n      const redirectPath = user.role === 'admin' ? '/admin/dashboard' :\r\n                          user.role === 'recruiter' ? '/recruiter/dashboard' :\r\n                          '/applicant/dashboard';\r\n      \r\n      window.location.href = redirectPath;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.error || 'Registration failed. Please try again.';\r\n      dispatch({\r\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\r\n        payload: errorMessage\r\n      });\r\n      \r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/auth/logout`);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n      toast.success('Logged out successfully');\r\n      window.location.href = '/';\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await axios.put(`${API_BASE_URL}/auth/profile`, profileData);\r\n      \r\n      dispatch({\r\n        type: AUTH_ACTIONS.UPDATE_USER,\r\n        payload: response.data.user\r\n      });\r\n\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.error || 'Failed to update profile';\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await axios.put(`${API_BASE_URL}/auth/change-password`, {\r\n        currentPassword,\r\n        newPassword\r\n      });\r\n\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.error || 'Failed to change password';\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user: state.user,\r\n    token: state.token,\r\n    loading: state.loading,\r\n    error: state.error,\r\n    isAuthenticated: !!state.token,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}